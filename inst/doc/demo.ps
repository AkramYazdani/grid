%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: demo.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Helvetica
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o demo.ps demo
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2001.05.09:1607
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (demo.dvi)
@start
%DVIPSBitmapFont: Fa cmtt10 10 31
/Fa 31 121 df<003C131E007F137F481480A66C1400A6007E7FA6003E133EA3003C131E
001C131C191977B32C>34 D<143814FC13011303EB07F8EB0FF0EB1FC0EB3F80EB7F0013
FE485A485A5B12075B120F5B485AA2123F90C7FCA25A127EA312FE5AAC7E127EA3127F7E
A27F121FA26C7E7F12077F12037F6C7E6C7E137FEB3F80EB1FC0EB0FF0EB07F8EB03FC13
0113001438164272B92C>40 D<127012FC7E7E6C7E6C7EEA0FE06C7E6C7E6C7E6C7E137F
7F1480131F14C0130FEB07E0A214F01303A214F81301A314FC1300AC130114F8A3130314
F0A2130714E0A2EB0FC0131F1480133F14005B13FE485A485A485A485AEA3FC0485A48C7
FC5A5A1270164279B92C>I<EA0F80EA1FE0EA3FF0EA7FF8A213FCA3123F121F120F1200
13F8A21201EA03F01207EA1FE0EA7FC0EAFF80130012FC12700E17718A2C>44
D<007FB6FCB71280A46C150021067B9B2C>I<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F
80EA1F000B0B708A2C>I<EB03F8EB0FFE90383FFF80497F90B57E3901FE0FF03903F803
F848486C7EEBE0004848137EA248487FA248C7EA1F80A2003E140F007E15C0A3007C1407
00FC15E0AC6C140F007E15C0A46CEC1F80A36C6CEB3F00A26C6C137E6D13FE00075CEBF0
016C6C485A3901FE0FF06CB55A6D5B6D5BD90FFEC7FCEB03F823357CB32C>48
D<1307497EA2131FA2133F137F13FF5A1207127FB5FC13DF139FEA7C1F1200B3AE007FB5
12E0B612F0A36C14E01C3477B32C>I<EB0FFC90387FFF8048B512E0000714F84880391F
F807FEEBC0004848137F6D7F1680151FA26C5A6CC7FCC8FC153F16005D15FE14014A5AEC
1FF890381FFFF0495BA215F86D7F90380007FEEC00FF81ED3F80ED1FC0150FA216E01507
A2123C127EB4FC150F16C0A248141F007FEC3F806DEB7F006C6C5B391FF807FE6CB55A6C
5C6C14E0C66C1380D90FFCC7FC23357CB32C>51 D<000FB512FE4880A35D0180C8FCADEB
83FE90389FFF8090B512E015F8819038FE03FE9038F000FF01C07F49EB3F8090C7121F6C
15C0C8120FA2ED07E0A4123C127EB4FC150F16C0A248141F007EEC3F80007FEC7F006C6C
5B6D485A391FF80FFC6CB55A6C5C000114C06C6C90C7FCEB0FF823347CB22C>53
D<1507ED1F80153F15FF14034A1300EC1FFC4A5AECFFE0491380010790C7FCEB0FFCEB3F
F8EB7FE048485A4890C8FCEA0FFEEA1FF8EA7FF0EAFFC05BA27FEA7FF0EA1FF8EA0FFEEA
03FF6C13C06C6C7EEB3FF8EB0FFC6DB4FC01017F6D13E0EC3FF86E7EEC07FF6E13801400
153F151FED0700212A7BAD2C>60 D<007FB612F0B712F8A4003F15F0CAFCA8003FB612F0
B712F8A46C15F025147DA22C>I<3801FFF0000713FE001F6D7E15E048809038C01FF814
07EC01FC381F80000006C77EC8127EA3ECFFFE131F90B5FC1203120F48EB807E383FF800
EA7FC090C7FC12FE5AA47E007F14FEEB8003383FE01F6CB612FC6C15FE6C14BF0001EBFE
1F3A003FF007FC27247CA32C>97 D<EA7FF0487EA3127F1201AAEC1FE0ECFFF801FB13FE
90B6FC16809138F07FC09138801FE091380007F049EB03F85BED01FC491300A216FE167E
A816FE6D14FCA2ED01F86D13036DEB07F0150F9138801FE09138E07FC091B51280160001
FB5B01F813F83900F03FC027337FB22C>I<903803FFE0011F13F8017F13FE48B5FC4880
4848C6FCEA0FF0485A49137E4848131890C9FC5A127EA25AA8127EA2127F6C140F6DEB1F
806C7E6D133F6C6CEB7F003907FE03FF6CB55A6C5C6C6C5B011F13E0010390C7FC21247A
A32C>I<EC0FFE4A7EA380EC003FAAEB07F8EB3FFE90B512BF4814FF5A3807FC0F380FF0
0348487E497E48487F90C7FC007E80A212FE5AA87E007E5CA2007F5C6C7E5C6C6C5A380F
F0073807FC1F6CB612FC6CECBFFE6C143FEB3FFC90390FF01FFC27337DB22C>I<EB03FE
90381FFFC0017F13F048B57E48803907FE03FE390FF800FFD81FE0EB3F805B4848EB1FC0
90C7120F5A007E15E015075AB7FCA416C000FCC9FC7E127EA2127F6CEC03C06DEB07E06C
7ED80FF0130F6C6CEB3FC001FF13FF000190B512806C1500013F13FC010F13F001011380
23247CA32C>I<ED03F8903907F80FFC90391FFE3FFE017FB6FC48B7FC48ECFE7F9038FC
0FF82607F003133E3A0FE001FC1CD9C0001300001F8049137EA66D13FE000F5CEBE0016C
6C485A3903FC0FF048B5FC5D481480D99FFEC7FCEB87F80180C8FCA37F6C7E90B512F06C
14FE48ECFF804815E04815F03A3FC0001FF848C7EA03FC007E1400007C157C00FC157E48
153EA46C157E007E15FCD87F801303D83FE0EB0FF8D81FFCEB7FF06CB612E0000315806C
1500D8003F13F8010713C028387EA42C>103 D<EA7FF0487EA3127F1201AAEC1FE0EC7F
FC9038F9FFFE01FB7F90B6FC9138F03F80ECC01F02807FEC000F5B5BA25BB3267FFFE0B5
FCB500F11480A36C01E0140029337FB22C>I<1307EB1FC0A2497EA36D5AA20107C7FC90
C8FCA7387FFFC080B5FC7EA2EA0007B3A8007FB512FCB612FEA36C14FC1F3479B32C>I<
EA7FE0487EA3127F1201AA91381FFFF04A13F8A36E13F0913800FE004A5A4A5A4A5A4A5A
4A5A4A5A4AC7FC14FEEBF1FC13F3EBF7FE90B5FCA2EC9F80EC0FC001FE7FEBFC07496C7E
496C7E811400157E811680151F3A7FFFC0FFFCB500E113FEA36C01C013FC27337EB22C>
107 D<387FFFE0B57EA37EEA0003B3B3A5007FB61280B712C0A36C158022337BB22C>I<
397FF01FE039FFF87FFC9038F9FFFE01FB7F6CB6FC00019038F03F80ECC01F02807FEC00
0F5B5BA25BB3267FFFE0B5FCB500F11480A36C01E0140029247FA32C>110
D<EB07FCEB1FFF017F13C048B512F048803907FC07FC390FF001FE48486C7E0180133F00
3F158090C7121F007EEC0FC0A348EC07E0A76C140F007E15C0A2007F141F6C15806D133F
6C6CEB7F006D5B6C6C485A3907FC07FC6CB55A6C5C6C6C13C0011F90C7FCEB07FC23247C
A32C>I<397FF01FE039FFF8FFF801FB13FE90B6FC6C158000019038F07FC09138801FE0
91380007F049EB03F85BED01FC491300A216FE167EA816FE6D14FCA2ED01F86D13036DEB
07F0150F9138801FE09138E07FC091B51280160001FB5B01F813F8EC3FC091C8FCAD387F
FFE0B57EA36C5B27367FA32C>I<D87FFEEB3FC0B53801FFF0020713F8021F13FC6C5B39
003F7FE1ECFF019138FC00F84A13704A13005CA25C5CA391C8FCAF007FB512E0B67EA36C
5C26247EA32C>114 D<90387FF8700003B512F8120F5A5A387FC00F387E00034813015A
A36CEB00F0007F140013F0383FFFC06C13FE6CEBFF80000314E0C66C13F8010113FCEB00
07EC00FE0078147F00FC143F151F7EA26C143F6D133E6D13FE9038F007FC90B5FC15F815
E000F8148039701FFC0020247AA32C>I<131E133FA9007FB6FCB71280A36C1500D8003F
C8FCB1ED03C0ED07E0A5EC800F011FEB1FC0ECE07F6DB51280160001035B6D13F8903800
3FE0232E7EAD2C>I<3A7FFF01FFFCB514FE148314016C15FC3A03E0000F80A26D131F00
011500A26D5B0000143EA26D137E017C137CA2017E13FC013E5BA2EB3F01011F5BA21483
010F5BA214C701075BA214EF01035BA214FF6D90C7FCA26D5A147C27247EA32C>118
D<D87FFFEB7FFF6EB5FCB515806C16004A7ED807C0EB01F0A66C6C495AA3143E147FA2D8
01F0495AECFF87A214F7A201F113C700005D9038F9E3CFA201FB13EFA3D97BC190C7FC01
7F13FFA21480A2013F5B90381F007C29247FA32C>I<3A3FFF03FFF048018713F8A36C01
0313F03A00FC007E005D90387E01F8013F5BEB1F83EC87E090380FCFC0903807EF80EB03
FF6D90C7FC5C6D5A147C14FE130180903803EF80903807CFC0EB0FC7EC83E090381F01F0
013F7FEB7E00017C137C49137E0001803A7FFF01FFFC1483B514FE6C15FC140127247EA3
2C>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmr10 10 39
/Fb 39 122 df<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007
017E497EA25BA2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C49
7E267FFFE0B512C0A32A3B7FBA2E>12 D<001C131C007F137F39FF80FF80A26D13C0A300
7F137F001C131C00001300A40001130101801380A20003130301001300485B0006130600
0E130E485B485B485B006013601A197DB92A>34 D<15301578B3A6007FB812F8B912FCA2
6C17F8C80078C8FCB3A6153036367BAF41>43 D<121C127FEAFF80A213C0A3127F121C12
00A412011380A2120313005A1206120E5A5A5A12600A19798817>I<B512FCA516057F94
1C>I<121C127FEAFF80A5EA7F00121C0909798817>I<EB03F8EB1FFF90387E0FC09038F8
03E03901E000F0484813780007147C48487FA248C77EA2481580A3007EEC0FC0A600FE15
E0B3007E15C0A4007F141F6C1580A36C15006D5B000F143EA26C6C5B6C6C5B6C6C485A6C
6C485A90387E0FC0D91FFFC7FCEB03F8233A7DB72A>48 D<EB01C013031307131F13FFB5
FCA2131F1200B3B3A8497E007FB512F0A31C3879B72A>I<EB07F8EB3FFF4913C03901F8
0FF03903C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC85A1401A25D4A
5AA24A5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F80A216
C0A2153F16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070ECFF006C495A
121E390F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A>51
D<121C127FEAFF80A5EA7F00121CC7FCB2121C127F5A1380A4127F121D1201A412031300
A25A1206A2120E5A121812385A1260093479A317>59 D<B812F8A30001903880001F6C90
C71201EE00FC177C173C171CA2170CA4170E1706A2ED0180A21700A41503A21507151F91
B5FCA3EC001F15071503A21501A692C8FCAD4813C0B612C0A32F397DB836>70
D<B612C0A3C6EBC0006D5AB3B3AD497EB612C0A31A397EB81E>73
D<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F001706EBCFF8EBC7FCA2EBC3
FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E7E168080ED7FC016E0153FED
1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE3FE6A2EE1FF6EE0FFEA21607
1603A216011600A2177E486C153E487ED80FFC151EB500C0140EA2170637397DB83E>78
D<003FB812E0A3D9C003EB001F273E0001FE130348EE01F00078160000701770A3006017
30A400E01738481718A4C71600B3B0913807FF80011FB612E0A335397DB83C>84
D<3901800180000313033907000700000E130E485B001813180038133800301330007013
7000601360A200E013E0485BA400CE13CE39FF80FF806D13C0A3007F137FA2393F803F80
390E000E001A1974B92A>92 D<EB1FE0EBFFFC3803E03F3907000F80390F8007E0486C6C
7E13E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC012
3F485A90C7FC160C12FEA31401A26C13036CEB077C903980063E18383FC01E3A0FE0781F
F03A03FFF00FE03A007F8007C026277DA52A>97 D<EA03F012FFA3120F1203B0EC1FE0EC
7FF89038F1E03E9039F3801F809039F7000FC001FEEB07E049EB03F049EB01F85BED00FC
A216FEA2167E167FAA167E16FEA216FC15016D14F8ED03F07F01EEEB07E001C6EB0FC090
39C7801F00903881E07E903800FFF8C7EA1FC0283B7EB92E>I<EB03FC90381FFF809038
7E03E03901F80070484813F83907E001FC380FC003A2EA1F80123F90380001F848EB00F0
1500A2127E12FEAA127E127FA26C14067F001F140E6D130C000F141C6C6C13386C6C1370
6C6C13E039007C07C090381FFF00EB07F81F277DA525>I<ED0FC0EC03FFA3EC003F150F
B0EB03F8EB1FFF90387E078F9038F801EF3903F0007F4848133F4848131FA24848130F12
3F90C7FC5AA2127E12FEAA127E127FA27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF0
3A01F801CFFF39007C078F90381FFE0FD907F813C0283B7DB92E>I<EB07F8EB1FFF9038
7C0FC03901F803E03903F001F0D807E013F8380FC0004848137CA248C7127E153E5A153F
127E12FEA3B7FCA248C8FCA5127EA2127FA26C14037F001F14076C6C13060007140E6D13
1CD801F013386C6C137090387E03E090381FFF80903803FC0020277EA525>I<147E9038
03FF8090380FC1E0EB1F8790383F0FF0137EA213FCA23901F803C091C7FCADB512FCA3D8
01F8C7FCB3AB487E387FFFF8A31C3B7FBA19>I<ED03F090390FF00FF890393FFC3C3C90
39F81F707C3901F00FE03903E007C03A07C003E010000FECF000A248486C7EA86C6C485A
A200075C6C6C485A6D485A6D48C7FC38073FFC38060FF0000EC9FCA4120FA213C06CB512
C015F86C14FE6CECFF804815C03A0F80007FE048C7EA0FF0003E140348140116F8481400
A56C1401007C15F06CEC03E0003F1407D80F80EB0F80D807E0EB3F003901FC01FC39007F
FFF0010790C7FC26387EA52A>I<EA03F012FFA3120F1203B0EC0FF0EC3FFCECF03F9039
F1C01F809039F3800FC0EBF70013FE496D7EA25BA35BB3A3486C497EB500C1B51280A329
3A7EB92E>I<EA0380EA0FE0487EA56C5AEA0380C8FCAAEA03F012FFA312071203B3AA48
7EB512C0A312387EB717>I<EB01C0EB07F0EB0FF8A5EB07F0EB01C090C7FCAAEB01F813
FFA313071301B3B3A2123C127E00FF13F01303A214E038FE07C0127C383C0F00EA0FFEEA
03F8154984B719>I<EA03F012FFA3120F1203B1913801FFFCA39138007FC01600157C15
705D4A5A4A5A4AC7FC141E1438147814FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114
076E7E6E7E811400157E157F811680ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C>I<
EA03F012FFA3120F1203B3B3AD487EB512C0A3123A7EB917>I<2703F00FF0EB1FE000FF
D93FFCEB7FF8913AF03F01E07E903BF1C01F83803F3D0FF3800FC7001F802603F70013CE
01FE14DC49D907F8EB0FC0A2495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA340
257EA445>I<3903F00FF000FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F70013
FE496D7EA25BA35BB3A3486C497EB500C1B51280A329257EA42E>I<EB03FE90380FFF80
90383E03E09038F800F84848137C48487F48487F4848EB0F80001F15C090C712074815E0
A2007EEC03F0A400FE15F8A9007E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D13
1F6C6CEB3F006C6C137EC66C13F890387E03F090381FFFC0D903FEC7FC25277EA52A>I<
3903F01FE000FFEB7FF89038F1E07E9039F3801F803A0FF7000FC0D803FEEB07E049EB03
F04914F849130116FC150016FEA3167FAA16FEA3ED01FCA26DEB03F816F06D13076DEB0F
E001F614C09039F7803F009038F1E07E9038F0FFF8EC1FC091C8FCAB487EB512C0A32835
7EA42E>I<3807E01F00FFEB7FC09038E1E3E09038E387F0380FE707EA03E613EE9038EC
03E09038FC0080491300A45BB3A2487EB512F0A31C257EA421>114
D<EBFF03000313E7380F80FF381E003F487F487F00707F12F0A2807EA27EB490C7FCEA7F
E013FF6C13E06C13F86C7F00037FC67F01071380EB007F141F00C0EB0FC01407A26C1303
A37E15806C13077EEC0F00B4131E38F3C07C38E1FFF038C03F801A277DA521>I<1318A5
1338A31378A313F8120112031207001FB5FCB6FCA2D801F8C7FCB215C0A93800FC011580
EB7C03017E13006D5AEB0FFEEB01F81A347FB220>I<D803F0EB07E000FFEB01FFA3000F
EB001F00031407B3A4150FA3151F12016D133F0000EC77F86D9038E7FF8090383F03C790
381FFF87903A03FC07E00029267EA42E>I<B538803FFEA33A0FF8000FF06C48EB07E000
03EC03C06D148000011500A26C6C1306A26D130E017E130CA26D5BA2EC8038011F1330A2
6D6C5AA214E001075BA2903803F180A3D901FBC7FCA214FF6D5AA2147CA31438A227257E
A32C>I<B53A1FFFE03FFEA3260FF8009038000FF86C48017EEB03E018C00003023EEB01
80A26C6C013FEB0300A36C6CEC8006156FA2017E9038EFC00C15C7A2D93F016D5A158302
81EBF038D91F831430150102C3EBF87090260FC6001360A2D907E66D5A02EC137CA2D903
FCEB7F804A133FA2010192C7FC4A7FA20100141E4A130E0260130C37257EA33C>I<B538
807FFFA33A03FE003FF00001EC1F80000092C7FC017E131C6D13186D6C5AECC070010F5B
6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A7E8114CF903801C7E090380383F09038
0703F8EB0601496C7E011C137E49137F01787F496D7E486C80000FEC3FF0D8FFFE90B512
80A329247FA32C>I<B538803FFEA33A0FF8000FF06C48EB07C00003EC03806C7E16007F
00001406A2017E5BA2137F6D5BA26D6C5AA2ECC070010F1360A26D6C5AA214F101035BA2
D901FBC7FCA214FF6D5AA2147CA31438A21430A214701460A25CA2EA7C0100FE5B130391
C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC027357EA32C>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmti10 10 8
/Fc 8 113 df<1438147CA3147814F85CA20007140E390F80E03E01C0137E9038E1E1FE
9038F1C3F83903F9CFE03900FDDF8090387FBE00EB1FF8EB07E0495AEB3FF0EBFBFC3803
F77E390FE73F80393F871FE038FF0F0F38FC0E0700F8130339E01E01C0000090C7FCA213
3E133C137CA313381F2470BD2A>42 D<147F903803FFC090380FC1E090381F0070017E13
784913383901F801F83803F003120713E0120FD81FC013F091C7FC485AA2127F90C8FCA3
5A5AA45AA3153015381578007C14F0007EEB01E0003EEB03C0EC0F806CEB3E00380F81F8
3803FFE0C690C7FC1D2677A426>99 D<ED01F815FFA3150316F0A21507A216E0A2150FA2
16C0A2151FA21680A2153FA202F81300EB07FE90381F877F90383E03FF017C5BEBF80112
013803F00048485B120FEBC001121F5DEA3F801403127F01005BA214075A485CA2140FA2
48ECC1C0A2141F15C3ED8380143F1587007C017F1300ECFF076C485B9038038F8E391F0F
079E3907FE03FC3901F000F0253B77B92A>I<147F903803FFC090380FC1E090383F00F0
017E13785B485A485A485A120F4913F8001F14F0383F8001EC07E0EC1F80397F81FF00EB
FFF891C7FC90C8FC5A5AA55AA21530007C14381578007E14F0003EEB01E0EC03C06CEB0F
806CEB3E00380781F83803FFE0C690C7FC1D2677A426>I<EB01C0EB07E014F0130F14E0
1307EB038090C7FCAB13F0EA03FCEA071EEA0E1F121CA212385B1270A25BEAF07E12E013
FEC65AA212015B1203A25B12075BA2000F13E013C013C1001F13C01381A2EB83801303EB
0700A2130E6C5AEA07F8EA01E0143879B619>105 D<D801E001FEEB07F03C07F803FF80
1FFC3C0E3C0F07C0783E3C1E3E3C03E1E01F261C1F78D9F3C013803C383FF001F7800F02
E01400007801C013FE007018C002805B4A4848EB1F80EAF07FD8E07E5CA200000207143F
01FE1700495CA2030F5C0001177E495C18FE031F5C120349DA8001131C18F8033F153C00
070403133849020013F0A24B1570000F17E049017E15F019E003FEECE1C0001FEE01E349
49903800FF000007C70038143C3E2679A444>109 D<147F903803FFC090380FC1F09038
1F00F8017E137C5B4848137E4848133E0007143F5B120F485AA2485A157F127F90C7FCA2
15FF5A4814FEA2140115FC5AEC03F8A2EC07F015E0140F007C14C0007EEB1F80003EEB3F
00147E6C13F8380F83F03803FFC0C648C7FC202677A42A>111 D<9039078007C090391F
E03FF090393CF0787C903938F8E03E9038787FC00170497EECFF00D9F0FE148013E05CEA
01E113C15CA2D80003143FA25CA20107147FA24A1400A2010F5C5E5C4B5A131F5EEC8003
5E013F495A6E485A5E6E48C7FC017F133EEC70FC90387E3FF0EC0F8001FEC9FCA25BA212
01A25BA21203A25B1207B512C0A3293580A42A>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmsy10 10 3
/Fd 3 106 df<007FB812F8B912FCA26C17F8CCFCAE007FB812F8B912FCA26C17F8CCFC
AE007FB812F8B912FCA26C17F836287BA841>17 D<14C0EB01E01303A214C01307A21480
130FA2EB1F00A2131E133EA25BA2137813F8A2485AA25B1203A25B1207A2485AA290C7FC
5AA2123EA2123C127CA2127812F8A41278127CA2123C123EA27EA27E7FA26C7EA212037F
A212017FA26C7EA21378137CA27FA2131E131FA2EB0F80A2130714C0A2130314E0A21301
EB00C0135278BD20>104 D<126012F07EA21278127CA2123C123EA27EA27E7FA26C7EA2
12037FA26C7EA212007FA21378137CA27FA2131E131FA2EB0F80A2130714C0A2130314E0
A414C01307A21480130FA2EB1F00A2131E133EA25BA2137813F8A25B1201A2485AA25B12
07A2485AA290C7FC5AA2123EA2123C127CA2127812F8A25A126013527CBD20>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmr12 12 8
/Fe 8 122 df<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A3120113
80120313005A1206120E5A5A5A12600B1D78891B>44 D<14FF010713E090381F81F89038
3E007C01FC133F4848EB1F8049130F4848EB07C04848EB03E0A2000F15F0491301001F15
F8A2003F15FCA390C8FC4815FEA54815FFB3A46C15FEA56D1301003F15FCA3001F15F8A2
6C6CEB03F0A36C6CEB07E0000315C06D130F6C6CEB1F806C6CEB3F00013E137C90381F81
F8903807FFE0010090C7FC28447CC131>48 D<143014F013011303131F13FFB5FC13E713
071200B3B3B0497E497E007FB6FCA3204278C131>I<EB03FE90381FFFC0017F13F03901
F80FFC3903C001FE48486C7E000EC7EA7F8048EC3FC0ED1FE04815F00030140F007015F8
00601407126CB415FC7F7F1503A46C4813076CC7FCC8FC16F8A2150F16F0151F16E0A2ED
3FC0ED7F8016005D5D4A5A4A5A4A5A5D4A5A4A5A4AC7FC147C5C5C495A495A495A49C712
0C131E5B013814185B5B485A4848143848C81230000E1570001FB612F0A25A5AB712E0A3
26427BC131>I<14FF010713E0011F13F890387F80FC9038FC007E48487F4848EB1F8048
48EB0FC0000FEC07E0485AED03F0485A16F8007F140190C713FCA25AA216FE1500A516FF
A46C5CA36C7E5D121F7F000F5C6C6C130E150C6C6C131C6C6C5BD8007C5B90383F01E090
390FFF80FE903801FE0090C8FC150116FCA4ED03F8A216F0D80F801307486C14E0486C13
0F16C0ED1F80A249EB3F0049137E001EC75A001C495A000F495A3907E01FE06CB51280C6
49C7FCEB1FF028447CC131>57 D<B56C933807FFFC6E5EA20001F1FE0026006FE0EE1BF8
A3D967F01633A2D963F81663A3D961FC16C3A3D960FEED0183A2027FED0303A36E6C1406
A36E6C140CA26E6C1418A36E6C1430A36E6C1460A26E6C14C0A36E6CEB0180A3037FEB03
00A292383F8006A36F6C5AA36F6C5AA26F6C5AA36F6C5AA36F6C5AA26FB45AA370C7FC13
F0A2486C143ED80FFFEF0FFEB500F0011C0107B512FCA34E447BC359>77
D<EB07FC90383FFF809038F80FE03903C003F048C66C7E000E6D7ED80FC0137E486C137F
6D6D7EA36F7EA26C5AEA0380C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA03FC48
5A485A485A485A127F5B176048C7FCA3153FA36D137F007F14EF6D9038C7E0C0003F1301
3A1FE00783F13B07F81E03FF802701FFFC0113003A001FE0007C2B2E7CAC31>97
D<B539F001FFFCA3000790C7EA7FE06C48EC1F8000011600160E0000150C6D141C6D1418
A26E1338013F1430A26D6C5BA26E13E0010F5CA26D6C485AA2ECF803010391C7FCA29038
01FC06A2ECFE0E0100130CA2EC7F18A215B8EC3FB0A2EC1FE0A36E5AA26E5AA36EC8FCA2
1406A35CA25CA2123C007E5BB4FC5CA25CEAFE01387C0380D87007C9FCEA3C1EEA0FFCEA
03F02E3F7EAA33>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmr17 17.28 22
/Ff 22 121 df<170FA34D7EA24D7EA34D7EA34D7EA34C7F17DFA29338039FFC178FA293
38070FFE1707040F7FEE0E03A2041E80EE1C01A2043C80EE3800A24C80187FA24C80183F
A24B4880181F0303814C130FA203078193C71207A24B81030E80A24B8284A24B8284A24B
82197F03F0824B153FA20201834B151FA202038392B8FCA24A83A292C91207020E8385A2
4A8485023C84023882A20278840270177FA202F0844A173FA24948841A1FA24948841A0F
A249CB7F1A074985865B496C85497E48486C4D7F000F01F8051F13F0B60407B612F0A45C
657DE463>65 D<BC1280A4C601FCC81201D93FF8DB001F13C0011F170319001A7F1A3F1A
1F1A0F1A07A21A03A21BE01A01A41A00A61B701870A41B00A418F0A4170117031707170F
177F91B7FCA402F8C7127F170F1707170317011700A41870A31B0EA41B1C95C8FCA51B3C
1B38A31B78A41BF0A31A01A21A031A07A2F20FE01A1F1A7F1AFF1903013F171FD9FFFC03
03B5FCBC12C0A44F6279E15A>69 D<DDFFF015C0040F01FF1401047F14E00303B600F813
03030F9038E003FEDB3FFCC7007F1307DBFFE0EC0FC002030180913803E00F4A48C83801
F01F4A48ED0078DA3FF0EE3C3F4A48161E4A48EE0F7F4949EE07FF4990CA7E495A494883
4948835C013F197F4948183F495A1B1F485B1B0F4890CCFCA248481907A2485A1B03121F
5BA2123F1B015BA2127F98C8FCA35B12FFB06C7EA24EB712E0A3123F95C7000FEBF0006D
06015B64001F857FA2120F7F1207A26C7EA26C7FA26C7FA26D7E6D7E131F806D7E6D6C5F
6D7E6D6D5E6D7F6E6CEE07BFDA3FF8EE0F3FDA0FFCEE1F1F6EB4163E6E01C0EDFC0F0200
01F0913801F807DB3FFEEC0FE092260FFFF09038FF8003030390B538FE0001DB007F02F8
1300040F02C091C7FC040001F8CAFC5B667AE368>71 D<B712C0A4C66CEB8000D91FFEC7
FC6D5AB3B3B3B3AE497E90387FFF80B712C0A422627AE12F>73 D<EC3FF0903803FFFE01
0F6D7E90393FC03FE090397E0007F801F86D7ED801E06D7E48486D7E48486E7E48C86C7E
7F01F06E7E487E6D6E7EA3707EA36C5AEA03E0C9FCA6167FED7FFF020FB5FC91387FF807
903801FF80903807FC00EB1FF0EB7FC0495AD803FEC7FC485A120F5B485A485AA2484817
E0A312FF5BA2160FA3161F6D141B007F153B16736D913971FC01C06C6C14E1001FEC01C1
D80FFC903A0780FE03806C6C903A0F00FF07002701FF807E6DB4FC27007FFFF86D5A011F
01E0EB1FF8010190C7EA07E03B417ABF42>97 D<4AB47E020F13F8023F13FE9139FF007F
80D903FCEB07E0D907F0EB01F0D91FE0EB007849488049488049C87E48485D4915FF0003
4B138048485CA2485AA2485AA2003F6F130049EC007C94C7FC127FA35B12FFAD127F7FA4
123F7FA2001FEE01C07F000F16036D168012076C6C15076D160000015E6C6C151E6D6C5C
6D6C5C6D6C5CD90FF8495AD903FCEB07C0903A00FF803F8091263FFFFEC7FC020F13F802
01138032417CBF3A>99 D<181EEF3FFEEE07FFA4EE000F1703A21701B3AAEDFF80020F13
F8023F13FE9139FF803F81903A03FC0007C14948EB01E1D91FE0EB00F94948147D494814
3D49C8121F4848150F491507120348481503491501120F121F5BA2123F5B127FA45B12FF
AD127F7FA3123FA27F121FA26C6C1503A26C6C150712036D150F6C6C151F0000163D137F
6D6CECF9FF6D6CEB01F1D90FF0D903C113C06D6CD90F81EBFF80D901FFEB7F019039007F
FFFC021F13E00201010091C7FC41657CE349>I<EC03FE91381FFFE091B512F8903901FE
03FE903A07F0007F8049486D7ED93FC06D7E49C76C7E496E7E4914034848814848140100
0782491400000F8283485A1880123F49153FA2007F17C0A35BA212FF90B8FCA30180CAFC
A9127F7FA3123FA27F121FEF01C06C7E17036C6C1680A26C6C15070001EE0F006D150E6C
6C151E6D6C5C6D6C5C6D6C5CD907F0EB03E0D903FC495A902700FF803FC7FC91383FFFFC
020F13F00201138032417CBF3A>I<ED0FF0ED7FFC4AB5FC913907F81F8091390FE00FC0
91381FC03F91393F807FE0EC7F005C495A5C0103EC3FC0A24948EB0F0093C7FCA2495AB3
A5B712F0A426000FF0C8FCB3B3B0497EEB3FFE003FB6FCA42B657EE428>I<F03F80DA03
FC903801FFE091273FFFC00713F091B539F01FC1F8903B03FC03FC3E03903A07F000FE78
4948EB7FE04948EB3FC04948011FEB01F049C76C6CC7FC01FE6E7EA248486E7EA2000382
A2491401000782AA00035E6D1403A200015EA26C6C4A5AA2017F4A5A6D6C495A6D6C495A
496C49C8FCD937F013FE903973FC03FC0160B512F0D9E03F13C0DA03FCC9FC4848CBFCA5
7FA27FA27F6C7E13FF91B512FE6DECFFF06D15FE6D6F7E6D16E084013F16FC01FEC70001
7FD803F8EC001FD807E0ED03FF4848030013804848167F003FEF3FC090CA121F127EF00F
E012FE481707A66C170F007E18C0A2007F171F6C6CEE3F806C6CEE7F00000F177ED807F0
4B5A6C6C4B5A6C6C4B5AD8007FED1FC0D93FE0ECFF80D90FFED90FFEC7FC0101B612F0D9
003F1480020101F0C8FC3D5E7DBF42>I<EB03C0EA07FFB5FCA41201EA007FA2133FB3AA
EE7FE0923803FFFC030F13FFDB3F0013C00378EB1FE04B6D7EDAC1C06D7EDAC3808002C7
C7120302CE81170114DC14D802F86E7E5CA35CA35CB3B3496C4A7F496C4A7FB6D8F003B6
12C0A442647DE349>I<133C13FF487F487FA66C5B6C90C7FC133C90C8FCB3A2EB03C0EA
07FF127FA41201EA007FA2133FB3B3AC497E497EB612E0A41B5F7DDE23>I<EB03C0EA07
FFB5FCA41201EA007FA2133FB3B3B3B3AD497E497EB612F0A41C647DE323>108
D<D903C0D9FFC0EC07FED807FF010301F891381FFFC0B5010F01FE027F13F0923D3F00FF
8001F807FC0378903B3FC003C001FEDAC1E090261FE00FC77E0001D9C3C090260FF01E6E
7ED8007F49902607F81C6E7E02C7C75CD93FCE6E6C486E7E02CC166002DC16E002D85E02
F8DA01FF6F7E4A5EA24A93C8FCA44A5DB3B3496C4A6C4B7E496C4A6D4A7EB6D8F007B6D8
803FB512FCA4663F7CBE6F>I<D903C0EB7FE0D807FF903803FFFCB5010F13FFDB3F0013
C00378EB1FE04B6D7E0001D9C1C06D7E27007FC3808002C7C71203D93FCE81170114DC14
D802F86E7E5CA35CA35CB3B3496C4A7F496C4A7FB6D8F003B612C0A4423F7DBE49>I<ED
FF80020F13F8023F13FE9139FF007F80D903FCEB1FE0D907F0EB07F0D90FC0EB01F8D93F
80EB00FE49C8127F017E81496F7E48486F7E00038349150700078348486F7EA2001F8349
1501A2003F83A348486F7EA400FF1880AC007F1800A26D5DA2003F5FA36C6C4B5AA36C6C
4B5A00075FA26C6C4B5A6C6C4B5AA26C6C4B5A017F4BC7FC6D6C14FE6D6C495AD90FF0EB
07F8D903FCEB1FE0D900FFEB7F806EB5C8FC020F13F8020113C039417CBF42>I<D903C0
EB7FC0D807FF903807FFFCB5011F13FFDB7F0013C003F8EB1FF0DAC3E0EB07F80001D9C7
806D7E26007FCFC76C7E02DE6E7ED93FFC6F7E4A6F7E4A82181F4A82727E5C727EA2727E
A3727EA41A8084AC4E1300A54E5AA2611807A24E5A6E5E181F6E4B5A6E5E187F6E4B5A02
DE4A90C7FC02CF4A5ADAC780495ADAC3C0EB0FF0DAC1F0EB3FE0913AC07E01FF806FB448
C8FC030F13F80300138093CAFCB3A3497E497EB612F0A4415B7DBE49>I<9039078003F8
D807FFEB0FFFB5013F13C092387C0FE0913881F01F9238E03FF00001EB838039007F8700
148FEB3F8E029CEB1FE0EE0FC00298EB030002B890C7FCA214B014F0A25CA55CB3B0497E
EBFFF8B612FCA42C3F7CBE33>114 D<9139FFE00180010FEBFC03017FEBFF073A01FF00
1FCFD803F8EB03EFD807E0EB01FF48487F4848147F48C8123F003E151F007E150F127CA2
00FC1507A316037EA27E7F6C7E6D91C7FC13F8EA3FFE381FFFF06CEBFF806C14F86C14FF
6C15C06C6C14F0011F80010714FED9007F7F02031480DA003F13C01503030013E0167F00
E0ED1FF0160F17F86C15071603A36C1501A37EA26C16F016037E17E06D14076DEC0FC06D
1580D8FDF0141FD8F8F8EC7F00013E14FC3AF01FC00FF80107B512E0D8E001148027C000
3FF8C7FC2D417DBF34>I<1438A71478A414F8A31301A31303A21307130F131FA2137F13
FF1203000F90B6FCB8FCA3260007F8C8FCB3AE17E0AE6D6CEB01C0A316036D6C14801607
6D6C14006E6C5A91383FC01E91381FF07C6EB45A020313E09138007F802B597FD733>I<
B66C49B512E0A4000101F8C8387FFE0026007FE0ED1FF819E0013F705A61131F6E93C7FC
130F180E6E151E0107161C8001035EA26E157801011670806D5EA26F1301027F5DA26E6C
495AA26F1307021F92C8FCA26E6C130EA26F131E0207141CA26F133C020314388102015C
A26F13F06E5C168092387F81C0A216C3033F5B16E3DB1FE7C9FCA216FF6F5AA26F5AA36F
5AA26F5AA36F5A433F7FBD46>118 D<007FB500C0010FB512E0A4C691C70003EBFC00D9
3FFE6E13E0D90FFC16807148C7FC01075E6D6C4A5A6D6C5D6D6D495A606E6C495A6E6C49
C8FC6E6C130E171E6E6C5B6E6C5B6E6C5B5F913801FF016EEB83C092387FC780033F90C9
FC16EFED1FFE6F5A6F5A826F7E6F7E5D834B7F92380F3FE0ED1E1F033C7F9238380FF892
387807FCEDF003DA01E07F4A486C7E707F4A486D7E4AC7FC021E6E7E021C6E7E023C6E7E
5C4A6E7E01016F7E49486E7E1307010F6F7F013F83D9FFF04A7F00076D4A13FCB56C020F
EBFFF8A4453E80BD46>120 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 409 739 a Ff(An)44 b(Example)g(of)f(In)l(teractiv)l(e)h
(Graphics)g(Editing)i(in)e(Grid)1651 1174 y Fe(Ma)m(y)33
b(9,)g(2001)150 1470 y Fd(h)p Fc(*)12 b Fd(i)q(\021)275
1707 y Fb(First)26 b(of)g(all,)h(w)n(e)f(create)g(an)g(x-axis.)35
b(This)26 b(pro)r(duces)g(output)h(on)g(the)f(device)h(and)f(sa)n(v)n
(es)f(the)i(axis)e(ob)5 b(ject)150 1807 y(in)28 b Fa(x)p
Fb(.)150 1944 y Fd(h)p Fc(demopic)5 b Fd(i)r(\021)233
2043 y Fa(x)43 b(<-)g(grid.xaxis\(vp=gr)o(id.)o(vi)o(ew)o(por)o(t\()o
(w=.)o(5,)37 b(h=.5\)\))275 2220 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 275 2220 a @beginspecial
436 @llx 217 @lly 459 @urx 625 @ury 2160 @rhi @setspecial
%%BeginDocument: demo1.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%Title: R Graphics Output
%%Creator: R Software
%%CreationDate: May 1 10:16
%%For:paul paul
%%Pages: 1
%%DocumentFonts: Helvetica
%%BoundingBox: 436 217 459 625
%%BeginPreview: 24 407 1 407
% 0001fc
% fe0180
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 8000f8
% 800124
% 800124
% 8001e4
% 800018
% 800000
% fe0004
% 800000
% 8000f8
% 800184
% 800104
% 80018c
% 800078
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 8000b8
% 800144
% 800144
% 8001ec
% 800078
% 800000
% fe0004
% 800000
% 800000
% 8000f8
% 800184
% 800104
% 80018c
% 800078
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800010
% 8001fc
% 800090
% 800070
% 800010
% 800000
% fe0004
% 800000
% 8000f8
% 800184
% 800104
% 80018c
% 800078
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 8000c4
% 800124
% 800114
% 80019c
% 800084
% fe0004
% 800000
% 800000
% 8000f8
% 800184
% 800104
% 80018c
% 800078
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 800000
% 8000f8
% 800184
% fe0104
% 00018c
% 000078
%%EndImage
%%EndPreview
save
countdictstack
mark
newpath
/showpage {} def
%%EndProlog
%%Page 1 1
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Helvetica-Oblique
%%+ font Helvetica-BoldOblique
/bp  { gs 595.00 0 translate 90 rotate gs } def
% begin .ps.prolog
/gs  { gsave } def
/gr  { grestore } def
/ep  { showpage gr gr } def
/m   { moveto } def
/l   { lineto } def
/np  { newpath } def
/cp  { closepath } def
/f   { fill } def
/o   { stroke } def
/c   { newpath 0 360 arc } def
/r   { 3 index 3 index moveto 1 index 4 -1 roll
       lineto exch 1 index lineto lineto closepath } def
/p1  { stroke } def
/p2  { gsave bg setrgbcolor fill grestore newpath } def
/p3  { gsave bg setrgbcolor fill grestore stroke } def
/t   { 6 -2 roll moveto gsave rotate
       ps mul neg 0 2 1 roll rmoveto
       1 index stringwidth pop
       mul neg 0 rmoveto show grestore } def
/cl  { grestore gsave newpath 3 index 3 index moveto 1 index
       4 -1 roll lineto  exch 1 index lineto lineto
       closepath clip newpath } def
/rgb { setrgbcolor } def
/s   { scalefont setfont } def
/R   { /Font1 findfont } def
/B   { /Font2 findfont } def
/I   { /Font3 findfont } def
/BI  { /Font4 findfont } def
/S   { /Font5 findfont } def
1 setlinecap 1 setlinejoin
% end   .ps.prolog
/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font1 exch definefont pop
/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font2 exch definefont pop
/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font3 exch definefont pop
/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font4 exch definefont pop
/Symbol findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  currentdict
  end
/Font5 exch definefont pop
bp
18.00 18.00 823.89 577.28 cl
0.0000 0.0000 0.0000 rgb
0.75 setlinewidth
[] 0 setdash
np
219.47 157.82 m
622.42 157.82 l
o
np
219.47 157.82 m
219.47 151.82 l
o
np
300.06 157.82 m
300.06 151.82 l
o
np
380.65 157.82 m
380.65 151.82 l
o
np
461.24 157.82 m
461.24 151.82 l
o
np
541.83 157.82 m
541.83 151.82 l
o
np
622.42 157.82 m
622.42 151.82 l
o
/ps 10 def R 10 s
219.47 136.23 (0) 0.50 0.00 0.00 t
300.06 136.23 (0.2) 0.50 0.00 0.00 t
380.65 136.23 (0.4) 0.50 0.00 0.00 t
461.24 136.23 (0.6) 0.50 0.00 0.00 t
541.83 136.23 (0.8) 0.50 0.00 0.00 t
622.42 136.23 (1) 0.50 0.00 0.00 t
ep
%%Trailer
cleartomark
countdictstack exch sub { end } repeat
restore
%%EOF

%%EndDocument
 @endspecial 376 2220 a
 currentpoint grestore moveto
 376 2220 a 275 2567 a Fb(No)n(w)27
b(w)n(e)g(edit)h(the)g(axis,)f(c)n(hanging)f(the)i(colour)e(of)i(the)g
(en)n(tire)f(axis)g(to)g(red.)150 2704 y Fd(h)p Fc(demopic)5
b Fd(i)r Fb(+)p Fd(\021)233 2804 y Fa(grid.edit\(x,)39
b(gp=gpar\(col="re)o(d"\))o(\))275 2980 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 275 2980 a
@beginspecial 436 @llx 217 @lly 459 @urx 625 @ury 2160
@rhi @setspecial
%%BeginDocument: demo2.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%Title: R Graphics Output
%%Creator: R Software
%%CreationDate: May 1 10:16
%%For:paul paul
%%Pages: 1
%%DocumentFonts: Helvetica
%%BoundingBox: 436 217 459 625
%%BeginPreview: 24 407 1 407
% 0000a8
% 7e0100
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 8000a8
% 000124
% 800020
% 8001e4
% 800008
% 000000
% aa0000
% 800000
% 8000a8
% 000104
% 800000
% 80018c
% 800028
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 8000a8
% 000144
% 800000
% 8001ec
% 800028
% 000000
% aa0000
% 800000
% 800000
% 000070
% 800080
% 800104
% 800088
% 000078
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000010
% 8000a8
% 800090
% 800020
% 000010
% 800000
% fe0004
% 800000
% 000070
% 800080
% 800104
% 800088
% 000078
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800080
% 800124
% 800000
% 00011c
% 800080
% fe0004
% 800000
% 000000
% 8000a8
% 800184
% 800000
% 00010c
% 800028
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 8000a8
% 800184
% aa0000
% 000104
% 000028
%%EndImage
%%EndPreview
save
countdictstack
mark
newpath
/showpage {} def
%%EndProlog
%%Page 1 1
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Helvetica-Oblique
%%+ font Helvetica-BoldOblique
/bp  { gs 595.00 0 translate 90 rotate gs } def
% begin .ps.prolog
/gs  { gsave } def
/gr  { grestore } def
/ep  { showpage gr gr } def
/m   { moveto } def
/l   { lineto } def
/np  { newpath } def
/cp  { closepath } def
/f   { fill } def
/o   { stroke } def
/c   { newpath 0 360 arc } def
/r   { 3 index 3 index moveto 1 index 4 -1 roll
       lineto exch 1 index lineto lineto closepath } def
/p1  { stroke } def
/p2  { gsave bg setrgbcolor fill grestore newpath } def
/p3  { gsave bg setrgbcolor fill grestore stroke } def
/t   { 6 -2 roll moveto gsave rotate
       ps mul neg 0 2 1 roll rmoveto
       1 index stringwidth pop
       mul neg 0 rmoveto show grestore } def
/cl  { grestore gsave newpath 3 index 3 index moveto 1 index
       4 -1 roll lineto  exch 1 index lineto lineto
       closepath clip newpath } def
/rgb { setrgbcolor } def
/s   { scalefont setfont } def
/R   { /Font1 findfont } def
/B   { /Font2 findfont } def
/I   { /Font3 findfont } def
/BI  { /Font4 findfont } def
/S   { /Font5 findfont } def
1 setlinecap 1 setlinejoin
% end   .ps.prolog
/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font1 exch definefont pop
/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font2 exch definefont pop
/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font3 exch definefont pop
/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font4 exch definefont pop
/Symbol findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  currentdict
  end
/Font5 exch definefont pop
bp
18.00 18.00 823.89 577.28 cl
18.00 18.00 823.89 577.28 cl
1.0000 0.0000 0.0000 rgb
0.75 setlinewidth
[] 0 setdash
np
219.47 157.82 m
622.42 157.82 l
o
np
219.47 157.82 m
219.47 151.82 l
o
np
300.06 157.82 m
300.06 151.82 l
o
np
380.65 157.82 m
380.65 151.82 l
o
np
461.24 157.82 m
461.24 151.82 l
o
np
541.83 157.82 m
541.83 151.82 l
o
np
622.42 157.82 m
622.42 151.82 l
o
/ps 10 def R 10 s
219.47 136.23 (0) 0.50 0.00 0.00 t
300.06 136.23 (0.2) 0.50 0.00 0.00 t
380.65 136.23 (0.4) 0.50 0.00 0.00 t
461.24 136.23 (0.6) 0.50 0.00 0.00 t
541.83 136.23 (0.8) 0.50 0.00 0.00 t
622.42 136.23 (1) 0.50 0.00 0.00 t
ep
%%Trailer
cleartomark
countdictstack exch sub { end } repeat
restore
%%EOF

%%EndDocument
 @endspecial 376 2980 a
 currentpoint grestore moveto
 376 2980 a 275 3328 a Fb(No)n(w)27
b(w)n(e)g(c)n(hange)f(just)i(the)g(lab)r(els)g(to)f(green.)150
3464 y Fd(h)p Fc(demopic)5 b Fd(i)r Fb(+)p Fd(\021)233
3564 y Fa(grid.edit\(x,)39 b("labels",)h(gp=gpar\(col="gr)o(ee)o(n"\))o
(\))275 3741 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 275 3741 a @beginspecial 436 @llx 217
@lly 459 @urx 625 @ury 2160 @rhi @setspecial
%%BeginDocument: demo3.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%Title: R Graphics Output
%%Creator: R Software
%%CreationDate: May 1 10:16
%%For:paul paul
%%Pages: 1
%%DocumentFonts: Helvetica
%%BoundingBox: 436 217 459 625
%%BeginPreview: 24 407 1 407
% 0000a8
% 7e0000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 8000a8
% 000004
% 800020
% 800140
% 800008
% 000000
% aa0000
% 800000
% 8000a8
% 000004
% 800000
% 800104
% 800028
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 8000a8
% 000044
% 800000
% 800140
% 800028
% 000000
% aa0000
% 800000
% 800000
% 000040
% 800080
% 800104
% 800088
% 000040
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 8000a8
% 800010
% 800020
% 000000
% 800000
% fe0004
% 800000
% 000040
% 800080
% 800104
% 800088
% 000040
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800080
% 800100
% 800000
% 000004
% 800080
% fe0004
% 800000
% 000000
% 8000a8
% 800104
% 800000
% 000004
% 800028
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 8000a8
% 800104
% aa0000
% 000004
% 000028
%%EndImage
%%EndPreview
save
countdictstack
mark
newpath
/showpage {} def
%%EndProlog
%%Page 1 1
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Helvetica-Oblique
%%+ font Helvetica-BoldOblique
/bp  { gs 595.00 0 translate 90 rotate gs } def
% begin .ps.prolog
/gs  { gsave } def
/gr  { grestore } def
/ep  { showpage gr gr } def
/m   { moveto } def
/l   { lineto } def
/np  { newpath } def
/cp  { closepath } def
/f   { fill } def
/o   { stroke } def
/c   { newpath 0 360 arc } def
/r   { 3 index 3 index moveto 1 index 4 -1 roll
       lineto exch 1 index lineto lineto closepath } def
/p1  { stroke } def
/p2  { gsave bg setrgbcolor fill grestore newpath } def
/p3  { gsave bg setrgbcolor fill grestore stroke } def
/t   { 6 -2 roll moveto gsave rotate
       ps mul neg 0 2 1 roll rmoveto
       1 index stringwidth pop
       mul neg 0 rmoveto show grestore } def
/cl  { grestore gsave newpath 3 index 3 index moveto 1 index
       4 -1 roll lineto  exch 1 index lineto lineto
       closepath clip newpath } def
/rgb { setrgbcolor } def
/s   { scalefont setfont } def
/R   { /Font1 findfont } def
/B   { /Font2 findfont } def
/I   { /Font3 findfont } def
/BI  { /Font4 findfont } def
/S   { /Font5 findfont } def
1 setlinecap 1 setlinejoin
% end   .ps.prolog
/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font1 exch definefont pop
/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font2 exch definefont pop
/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font3 exch definefont pop
/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font4 exch definefont pop
/Symbol findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  currentdict
  end
/Font5 exch definefont pop
bp
18.00 18.00 823.89 577.28 cl
18.00 18.00 823.89 577.28 cl
1.0000 0.0000 0.0000 rgb
0.75 setlinewidth
[] 0 setdash
np
219.47 157.82 m
622.42 157.82 l
o
np
219.47 157.82 m
219.47 151.82 l
o
np
300.06 157.82 m
300.06 151.82 l
o
np
380.65 157.82 m
380.65 151.82 l
o
np
461.24 157.82 m
461.24 151.82 l
o
np
541.83 157.82 m
541.83 151.82 l
o
np
622.42 157.82 m
622.42 151.82 l
o
/ps 10 def R 10 s
0.0000 1.0000 0.0000 rgb
219.47 136.23 (0) 0.50 0.00 0.00 t
300.06 136.23 (0.2) 0.50 0.00 0.00 t
380.65 136.23 (0.4) 0.50 0.00 0.00 t
461.24 136.23 (0.6) 0.50 0.00 0.00 t
541.83 136.23 (0.8) 0.50 0.00 0.00 t
622.42 136.23 (1) 0.50 0.00 0.00 t
ep
%%Trailer
cleartomark
countdictstack exch sub { end } repeat
restore
%%EOF

%%EndDocument
 @endspecial 376 3741 a
 currentpoint grestore moveto
 376 3741 a 275 4088 a Fb(It)28
b(is)h(also)e(p)r(ossible)i(to)f(c)n(hange)g(the)g(n)n(um)n(b)r(er)h
(of)f(tic)n(k)h(marks.)38 b(Notice)29 b(that)g(the)g(lab)r(els)f(all)h
(c)n(hange)e(bac)n(k)150 4188 y(to)i(red;)f(this)h(happ)r(ens)g(b)r
(ecause)f(new)h(lab)r(els)f(are)g(created)g(b)n(y)g(the)h(axis)f(and)g
(these)h(\\inherit")f(the)h(colour)e(of)150 4287 y(the)k(axis)g(b)n(y)f
(default.)48 b(In)31 b(other)f(w)n(ords,)h(the)g(colour)f(sp)r
(eci\014cation)g(of)h(the)g(old)g(lab)r(els)g(w)n(as)f(sp)r(eci\014c)h
(to)g(the)150 4387 y(old)c(lab)r(els)h(and)f(w)n(as)g(discarded)f(when)
i(the)g(old)g(lab)r(els)f(w)n(ere)g(discarded.)150 4524
y Fd(h)p Fc(demopic)5 b Fd(i)r Fb(+)p Fd(\021)233 4623
y Fa(grid.edit\(x,)39 b(at=c\(0.0,)h(0.5,)h(1.0\)\))275
4800 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 275 4800 a @beginspecial 436 @llx 217 @lly 459
@urx 625 @ury 2160 @rhi @setspecial
%%BeginDocument: demo4.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%Title: R Graphics Output
%%Creator: R Software
%%CreationDate: May 1 10:16
%%For:paul paul
%%Pages: 1
%%DocumentFonts: Helvetica
%%BoundingBox: 436 217 459 625
%%BeginPreview: 24 407 1 407
% 0000a8
% 7e0100
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000130
% 800000
% 800144
% 8000a8
% 000048
% 800000
% fe0000
% 800000
% 000070
% 800080
% 800104
% 800088
% 000078
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 800000
% 800000
% 800000
% 000000
% 8000a8
% 800184
% aa0000
% 000104
% 000028
%%EndImage
%%EndPreview
save
countdictstack
mark
newpath
/showpage {} def
%%EndProlog
%%Page 1 1
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Helvetica-Oblique
%%+ font Helvetica-BoldOblique
/bp  { gs 595.00 0 translate 90 rotate gs } def
% begin .ps.prolog
/gs  { gsave } def
/gr  { grestore } def
/ep  { showpage gr gr } def
/m   { moveto } def
/l   { lineto } def
/np  { newpath } def
/cp  { closepath } def
/f   { fill } def
/o   { stroke } def
/c   { newpath 0 360 arc } def
/r   { 3 index 3 index moveto 1 index 4 -1 roll
       lineto exch 1 index lineto lineto closepath } def
/p1  { stroke } def
/p2  { gsave bg setrgbcolor fill grestore newpath } def
/p3  { gsave bg setrgbcolor fill grestore stroke } def
/t   { 6 -2 roll moveto gsave rotate
       ps mul neg 0 2 1 roll rmoveto
       1 index stringwidth pop
       mul neg 0 rmoveto show grestore } def
/cl  { grestore gsave newpath 3 index 3 index moveto 1 index
       4 -1 roll lineto  exch 1 index lineto lineto
       closepath clip newpath } def
/rgb { setrgbcolor } def
/s   { scalefont setfont } def
/R   { /Font1 findfont } def
/B   { /Font2 findfont } def
/I   { /Font3 findfont } def
/BI  { /Font4 findfont } def
/S   { /Font5 findfont } def
1 setlinecap 1 setlinejoin
% end   .ps.prolog
/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font1 exch definefont pop
/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font2 exch definefont pop
/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font3 exch definefont pop
/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font4 exch definefont pop
/Symbol findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  currentdict
  end
/Font5 exch definefont pop
bp
18.00 18.00 823.89 577.28 cl
18.00 18.00 823.89 577.28 cl
1.0000 0.0000 0.0000 rgb
0.75 setlinewidth
[] 0 setdash
np
219.47 157.82 m
622.42 157.82 l
o
np
219.47 157.82 m
219.47 151.82 l
o
np
420.94 157.82 m
420.94 151.82 l
o
np
622.42 157.82 m
622.42 151.82 l
o
/ps 10 def R 10 s
219.47 136.23 (0) 0.50 0.00 0.00 t
420.94 136.23 (0.5) 0.50 0.00 0.00 t
622.42 136.23 (1) 0.50 0.00 0.00 t
ep
%%Trailer
cleartomark
countdictstack exch sub { end } repeat
restore
%%EOF

%%EndDocument
 @endspecial 376 4800 a
 currentpoint grestore moveto
 376 4800 a 275 5147 a Fb(Finally)-7
b(,)27 b(w)n(e)g(c)n(hange)g(the)h(lab)r(els)f(bac)n(k)g(to)g(blac)n(k)
g(and)h(rotate)e(them)i(all)g(30)14 b(deg)o(.)150 5284
y Fd(h)p Fc(demopic)5 b Fd(i)r Fb(+)p Fd(\021)233 5384
y Fa(grid.edit\(x,)39 b("labels",)h(grid.prop.list\()o(gp)o(=gp)o(ar)o
(\(co)o(l=)o("bl)o(ac)o(k")o(\),)d(rot=30\)\))275 5560
y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 275 5560 a @beginspecial 436 @llx 217 @lly 461 @urx
626 @ury 2160 @rhi @setspecial
%%BeginDocument: demo5.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%Title: R Graphics Output
%%Creator: R Software
%%CreationDate: May 1 10:16
%%For:paul paul
%%Pages: 1
%%DocumentFonts: Helvetica
%%BoundingBox: 436 217 461 626
%%BeginPreview: 26 408 1 408
% 00000c00
% 00003800
% 7e00e000
% 8001c000
% 80004000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 8000e000
% 0001b000
% 80011000
% 800d9000
% 8004d800
% 0007cc00
% 80020000
% fe000600
% 80001f00
% 00003100
% 80006300
% 80004600
% 80007c00
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00000000
% 80000000
% 80000000
% 80000000
% 00001800
% 80007c00
% 8000c400
% aa018c00
% 00011800
% 0001f000
%%EndImage
%%EndPreview
save
countdictstack
mark
newpath
/showpage {} def
%%EndProlog
%%Page 1 1
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Helvetica-Oblique
%%+ font Helvetica-BoldOblique
/bp  { gs 595.00 0 translate 90 rotate gs } def
% begin .ps.prolog
/gs  { gsave } def
/gr  { grestore } def
/ep  { showpage gr gr } def
/m   { moveto } def
/l   { lineto } def
/np  { newpath } def
/cp  { closepath } def
/f   { fill } def
/o   { stroke } def
/c   { newpath 0 360 arc } def
/r   { 3 index 3 index moveto 1 index 4 -1 roll
       lineto exch 1 index lineto lineto closepath } def
/p1  { stroke } def
/p2  { gsave bg setrgbcolor fill grestore newpath } def
/p3  { gsave bg setrgbcolor fill grestore stroke } def
/t   { 6 -2 roll moveto gsave rotate
       ps mul neg 0 2 1 roll rmoveto
       1 index stringwidth pop
       mul neg 0 rmoveto show grestore } def
/cl  { grestore gsave newpath 3 index 3 index moveto 1 index
       4 -1 roll lineto  exch 1 index lineto lineto
       closepath clip newpath } def
/rgb { setrgbcolor } def
/s   { scalefont setfont } def
/R   { /Font1 findfont } def
/B   { /Font2 findfont } def
/I   { /Font3 findfont } def
/BI  { /Font4 findfont } def
/S   { /Font5 findfont } def
1 setlinecap 1 setlinejoin
% end   .ps.prolog
/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font1 exch definefont pop
/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font2 exch definefont pop
/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font3 exch definefont pop
/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font4 exch definefont pop
/Symbol findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  currentdict
  end
/Font5 exch definefont pop
bp
18.00 18.00 823.89 577.28 cl
18.00 18.00 823.89 577.28 cl
1.0000 0.0000 0.0000 rgb
0.75 setlinewidth
[] 0 setdash
np
219.47 157.82 m
622.42 157.82 l
o
np
219.47 157.82 m
219.47 151.82 l
o
np
420.94 157.82 m
420.94 151.82 l
o
np
622.42 157.82 m
622.42 151.82 l
o
/ps 10 def R 10 s
0.0000 0.0000 0.0000 rgb
221.27 136.71 (0) 0.50 0.00 30.00 t
422.74 136.71 (0.5) 0.50 0.00 30.00 t
624.21 136.71 (1) 0.50 0.00 30.00 t
ep
%%Trailer
cleartomark
countdictstack exch sub { end } repeat
restore
%%EOF

%%EndDocument
 @endspecial 385 5560 a
 currentpoint grestore moveto
 385 5560 a 1892 5919 a Fb(1)p
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
